#IDS
ids = \
about \
general general.formats general.reset \
encode encode.load encode.input encode.image encode.image.prew encode.image.upd_sav encode.password encode.password.safety encode.channels \
decode decode.failed decode.load decode.password

#ABOUT
about.topic = About
about.text = JSteg - a steganography application. \n\
			 \u00A9 Jakub \u0161antora, 2017
#GENERAL
general.topic = General
general.text = Help with general application usage.
general.formats.topic = File formats
general.formats.text = Available formats are: \n\
						\t PNG, BMP, JPG, GIF for encoding input \n\
						\t PNG, BMP for encoding output and decoding input
general.reset.topic = Hard reset
general.reset.text = If you for some reason cannot restore default settings, just delete the settings.jsteg file to perform a hard reset of the application.
#ENCODING
encode.topic = Encoding
encode.text = To encode a message into an image follow these steps: \n\
			  1) Load an image\n\
			  2) Input your message\n\
			  3) Optional: Choose a password\n\
			  4) Optional: Choose color channels\n\
			  5) Update encoded image\n\
			  6) Save encoded image.
encode.load.topic = Loading an image
encode.load.text = You can load an image to be used as a cover for the hidden message by clicking in the text field labeled "Image file". \n\
					 Available formats are: PNG, BMP, JPG and GIF images. \n\
					 PNG images loaded do not retain transparency.
encode.input.topic = Entering a message
encode.input.text = You can enter the message you want to encode in the text area labeled "Text to encode". \n\
					You can see how many characters you can use right below this text area. \
					This number depends on the dimensions of supplied image and channels used for encoding. \n\
					If you change the channels or image after entering a message, any characters above the limits will be deleted.
encode.image.topic = Encoded image
encode.image.text = Help with encoding and saving the image.
encode.image.prew.topic = Affected pixels preview
encode.image.prew.text = You can see the preview of encoded image under a label "Affected pixels". \n\
					This is not an accurate represntation of the resulting image, only of the pixels that will contain the message (and thus change color).\n\
					You can elarge the previe by clicking on the image.
encode.image.upd_sav.topic = Updating and saving
encode.image.upd_sav.text = You can update the encode image using the "Update encoded image" button and save it with "Save encoded image" button. \n\
							The image needs to be updated everytime you change the message or any settings. \n\
							Available output formats are PNG and BMP.
encode.password.topic = Password protection
encode.password.text = You can password protect your encoded message by entering a password into the "Password" field. \n\
					   The resulting image will not be able to be decodable without this password.
encode.password.safety.topic = Safety
encode.password.safety.text = Password protection is not unique - multiple password may decode a single file if they have the same hash.\n\
							  This is extremely rare though, and should not worry you.
encode.channels.topic = Color channels
encode.channels.text = You can select which color channels to use for encoding with the Red, Green and Blue checkboxes.\n\
					   The more channels you use, the longer the encoded message can be. 
#DECODING
decode.topic = Decoding
decode.text = To decode a message into an image follow these steps: \n\
			  1) Load an image\n\
			  2) Optional: Input a password\n\
			  3) Press the decode button\n\
			  4) Encoded message will show up.
decode.failed.topic = Decoding Failed
decode.failed.text = Decoding may fail for a number of reasons, the most common are:\n\
					 - Wrong password. \
					 - File does not contain a message. \
					 - Different advanced settings on encoding and decoding computers.
decode.load.topic = Loading an image
decode.load.text = You can load an image with a hidden message by clicking in the text field labeled "Image file". \n\
					 Available formats are: PNG and BMP images.
decode.password.topic = Password protection
decode.password.text = If a password was used during the encoding, you need to input it into the "Password" field. 